openapi: 3.0.0
info:
  title: Especificação para inclusão dos dados de crescimento da criança
  description: Especificação para inclusão dos dados de crescimento da criança
  contact:
    email: suport@matheusmoreira.com
  version: 1.0.0
servers:
  - url: /
security:
  - application:
      - read
      - write
paths:
  /progress:
    get:
      summary: Recuperar todas os progressos de todos as contas
      parameters:
        - name: token
          in: header
          description: Token JWT no header
          required: true
          style: simple
          explode: false
          schema:
            type: array
            items:
              type: string
              format: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImF5bGFuQGJvc2Nhcmluby5jb20iLCJwYXNzd29yZCI6InlhMGdzcWh5NHd6dnV2YjQifQ.yN_8-Mge9mFgsnYHnPEh_ZzNP7YKvSbQ3Alug9HMCsM
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/body_response'
        "400":
          description: Dados request enviados incorretos
        "401":
          description: Token invalido, inexistente ou expirado
        "500":
          description: Erro no servidor
    post:
      summary: Cria uma novo progresso
      parameters:
        - name: token
          in: header
          description: Token JWT no header
          required: true
          style: simple
          explode: false
          schema:
            type: array
            items:
              type: string
              format: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImF5bGFuQGJvc2Nhcmluby5jb20iLCJwYXNzd29yZCI6InlhMGdzcWh5NHd6dnV2YjQifQ.yN_8-Mge9mFgsnYHnPEh_ZzNP7YKvSbQ3Alug9HMCsM
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_request'
        required: true
      responses:
        "201":
          description: Criado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/body_response'
        "400":
          description: Dados request enviados incorretos
        "401":
          description: Token invalido, inexistente ou expirado
        "500":
          description: Erro no servidor
  /progress/{id}:
    get:
      summary: Recuperar um progresso pelo id
      parameters:
        - name: id
          in: path
          description: Id de identificação do progresso
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: token
          in: header
          description: Token JWT no header
          required: true
          style: simple
          explode: false
          schema:
            type: array
            items:
              type: string
              format: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImF5bGFuQGJvc2Nhcmluby5jb20iLCJwYXNzd29yZCI6InlhMGdzcWh5NHd6dnV2YjQifQ.yN_8-Mge9mFgsnYHnPEh_ZzNP7YKvSbQ3Alug9HMCsM
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/body_response'
        "400":
          description: Dados request enviados incorretos
        "401":
          description: Token invalido, inexistente ou expirado
        "404":
          description: Recurso {id} não encontrado
        "500":
          description: Erro no servidor
    put:
      summary: Atualizar um progresso pelo id
      parameters:
        - name: id
          in: path
          description: Id de identificação do progresso
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: token
          in: header
          description: Token JWT no header
          required: true
          style: simple
          explode: false
          schema:
            type: array
            items:
              type: string
              format: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImF5bGFuQGJvc2Nhcmluby5jb20iLCJwYXNzd29yZCI6InlhMGdzcWh5NHd6dnV2YjQifQ.yN_8-Mge9mFgsnYHnPEh_ZzNP7YKvSbQ3Alug9HMCsM
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_request'
        required: true
      responses:
        "202":
          description: Aceito
        "400":
          description: Dados request enviados incorretos
        "401":
          description: Token invalido, inexistente ou expirado
        "404":
          description: Recurso {id} não encontrado
        "500":
          description: Erro no servidor
    delete:
      summary: Excluir um progresso pelo id
      parameters:
        - name: id
          in: path
          description: Id de identificação do progresso
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: token
          in: header
          description: Token JWT no header
          required: true
          style: simple
          explode: false
          schema:
            type: array
            items:
              type: string
              format: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImF5bGFuQGJvc2Nhcmluby5jb20iLCJwYXNzd29yZCI6InlhMGdzcWh5NHd6dnV2YjQifQ.yN_8-Mge9mFgsnYHnPEh_ZzNP7YKvSbQ3Alug9HMCsM
      responses:
        "204":
          description: Sem conteúdo
        "400":
          description: Dados request enviados incorretos
        "401":
          description: Token invalido, inexistente ou expirado
        "404":
          description: Recurso {id} não encontrado
        "500":
          description: Erro no servidor
components:
  schemas:
    body_response:
      required:
        - account
        - dataProgress
        - headCircumference
        - height
        - id
        - weight
      type: object
      properties:
        id:
          type: integer
          example: 1
        height:
          type: number
        weight:
          type: number
          example: 45
        headCircumference:
          type: number
        dataProgress:
          type: string
          format: date
        account:
          $ref: '#/components/schemas/body_response_account'
    body_request:
      required:
        - account
        - dataProgress
        - headCircumference
        - height
        - weight
      type: object
      properties:
        height:
          type: number
        weight:
          type: number
          example: 45
        headCircumference:
          type: number
        dataProgress:
          type: string
          format: date
        account:
          $ref: '#/components/schemas/body_response_account'
    body_response_account:
      required:
        - dateBirth
        - email
        - firstName
        - gender
        - id
        - lastName
      type: object
      properties:
        id:
          type: integer
          example: 1
        firstName:
          type: string
          example: First
        lastName:
          type: string
          example: Last
        email:
          type: string
          format: email
          example: admin@admin.com
        dateBirth:
          type: string
          format: date
        gender:
          type: string
          example: M
          enum:
            - M
            - F
